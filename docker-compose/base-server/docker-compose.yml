version: '3.8'
# Windows docker /opt/ 替换 D:加前缀
services:

  #mysql
  mysql8:
    container_name: mysql8
    image: mysql:8.0.43
    restart: unless-stopped
    # 块样式
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    # 不能使用块样式
    volumes:
      - D:/opt/mydata/mysql8/data:/var/lib/mysql
      - D:/opt/mydata/mysql8/conf:/etc/mysql/conf.d  # 挂载配置文件目录
      - D:/opt/mydata/mysql8/init:/docker-entrypoint-initdb.d  # 挂载初始化SQL脚本
    # 添加初始化命令
    command:
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --default-authentication-plugin=mysql_native_password
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --max_allowed_packet=128M;
    # 块样式
    networks:
      mynetwork:

  #postgres
  postgres16:
    container_name: postgres16
    image: postgres:16.10-alpine
    #序列样式
    environment:
      - POSTGRES_USER=postgres      # 可选：指定用户名
      - POSTGRES_PASSWORD=123456    # 密码
      - POSTGRES_DB=postgres        # 可选：指定数据库名
      - TZ=Asia/Shanghai  # 可选：设置时区
    ports:
      - "5432:5432"
    volumes:
      - D:/opt/mydata/postgresql/data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      mynetwork:

  #redis
  redis8:
    container_name: redis8
    image: redis:8.2.1-alpine3.22
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - D:/opt/mydata/redis/redis.conf:/etc/redis/redis.conf
      - D:/opt/mydata/redis/data:/data
    command: redis-server /etc/redis/redis.conf
    networks:
      mynetwork:

  #kafka
  kafka:
    container_name: kafka
    image: bitnami/kafka:3.8.0
    restart: unless-stopped
    ports:
      - "9092:9092"
    extra_hosts:
      - "hadoop102:192.168.10.102"
      - "hadoop103:192.168.10.103"
      - "hadoop104:192.168.10.104"
    volumes:
      - D:/opt/mydata/kafka/data:/bitnami/data
    environment:
      # ==================== KRaft 核心配置 ====================
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093

      # ==================== 监听器配置 ====================
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9092

      # ==================== 必须的配置 ====================
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

      # ==================== 其他重要配置 ====================
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1

      # ==================== Bitnami 特定配置 ====================
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=yes
    networks:
      mynetwork:
  #        ipv4_address: 172.18.0.30

  #minio
  minio:
    image: minio/minio:RELEASE.2024-10-02T17-50-41Z
    container_name: minio
    restart: unless-stopped
    privileged: true
    networks:
      - mynetwork
    environment:
      - TZ=Asia/Shanghai
      - MINIO_ROOT_USER=admin         # 用户名
      - MINIO_ROOT_PASSWORD=admin123  # 密码
    ports:
      - "19000:9000"  # API端口
      - "19001:9001"  # web端口
    volumes:
      - D:/opt/mydata/minio/data:/data
    command: server /data --console-address ":9001"

  #nginx
  nginx:
    image: nginx:1.28.0-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "15000:80"
    volumes:
      - D:/opt/mydata/nginx/html:/usr/share/nginx/html
      - D:/opt/mydata/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - D:/opt/mydata/nginx/conf.d:/etc/nginx/conf.d
      - D:/opt/mydata/nginx/log:/var/log/nginx
    networks:
      mynetwork:

  #nacos
  nacos2:
    image: nacos/nacos-server:v2.2.0
    container_name: nacos2
    restart: unless-stopped
    environment:
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      # 配置数据库
      - MYSQL_SERVICE_HOST=mysql8
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=123456
      - JVM_XMS=256m
      - JVM_XMX=256m
      - JVM_XMN=128m
    ports:
      - "8848:8848"
      - "9848:9848"
    networks:
      mynetwork:
    depends_on:
      - mysql8

  #XXL-JOB Admin 调度中心
  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.4.1
    container_name: xxl-job
    restart: unless-stopped
    environment:
      PARAMS: "--spring.datasource.url=jdbc:mysql://mysql8:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai --spring.datasource.username=root --spring.datasource.password=123456 --xxl.job.accessToken=abcd1234"
    ports:
      - "17021:8080"
    networks:
      mynetwork:
    depends_on:
      - mysql8

#docker network create --subnet=172.18.0.0/16  mynetwork
networks:
  mynetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16  # 指定子网


